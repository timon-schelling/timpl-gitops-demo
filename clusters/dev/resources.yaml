apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: cr.example.com/frontend:dev-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: cr.example.com/backend:dev-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: ingress
  namespace: ingress-system
spec:
  interval: 1m
  url: "https://helm.nginx.com/stable"
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress
  namespace: ingress-system
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: ingress
      chart: nginx-ingress
      version: 0.15.2
  interval: 1m
  values:
    controller:
      enableCertManager: true
      name: ingress
      enableLatencyMetrics: true
      config:
        name: ingress
      service:
        name: ingress
      serviceAccount:
        name: ingress
      reportIngressStatus:
        leaderElectionLockName: ingress-leader-election
    prometheus:
      create: false
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServer
metadata:
  name: com-example-app-dev
  namespace: ingress
spec:
  host: dev.app.example.com
  tls:
    secret: com-example-app-dev-tls
  routes:
  - path: /
    route: default/com-example-app-dev-frontend
  - path: /api
    route: default/com-example-app-dev-backend
  - path: /monitoring
    route: monitoring/com-example-app-dev-dashboard
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServerRoute
metadata:
  name: com-example-app-dev-frontend
  namespace: default
spec:
  host: dev.app.example.com
  upstreams:
  - name: frontend
    service: frontend
    port: 80
  subroutes:
  - path: /
    action:
        pass: frontend
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServerRoute
metadata:
  name: com-example-app-dev-backend
  namespace: default
spec:
  host: dev.app.example.com
  upstreams:
  - name: backend
    service: backend
    port: 80
  subroutes:
  - path: /api
    action:
        pass: backend
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServerRoute
metadata:
  name: com-example-app-dev-dashboard
  namespace: monitoring
spec:
  host: dev.app.example.com
  upstreams:
  - name: dashboard
    service: dashboard
    port: 80
  subroutes:
  - path: /monitoring
    action:
        pass: dashboard
